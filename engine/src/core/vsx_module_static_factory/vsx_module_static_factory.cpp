
#include <vsx_platform.h>

#include "vsxfst.h"
#include "vsx_math_3d.h"
#include "vsx_command.h"
#include "vsx_param.h"
#include "vsx_module.h"
#include "vsx_timer.h"
#include <list>

#include <vsx_module_static_factory.h>

#include <plugins/static_factory_funcmapping.h>

// will fill out internal std::maps with pointers to factory functions
vsxm_sf::vsxm_sf()
{
  #define VSXM_SF_ADD_MODULE(name,m_cm,m_dm,m_nm) modules.push_back(new vsxm_sf_info(#name,(void*)m_cm,(void*)m_dm,(void*)m_nm))
  // build the definitions
  #include <plugins/static_factory_funcmapping.cpp>
  // to be auto-generated by cmake
}

// fake dlsym, returns function pointers to static functions
void *vsxm_sf::dlsym(void *handle, const char *symbol)
{
  return 0;
}

void vsxm_sf::get_factory_names(std::list<vsx_string>* mfiles)
{
  // crunch up the list
}

void* vsxm_sf::dlopen(const char *filename)
{
  return 0;
}
